package com.in28minutes.rest.webservices.restful_web_services.user;

import java.net.URI;
import java.util.List;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

@RestController
public class UserResource {
	
	private UserDaoService service;
	
	
	public UserResource(UserDaoService service) {
		super();
		this.service = service;
	}
	
	//Get /user
	@GetMapping("/users")
	public List<User> retrieveAllUsers(){
		return service.findAll();
	}
	
	//Delete /user
	@DeleteMapping("/users/{id}")
	public User deleteUsers(@PathVariable int id){
		User user = service.deleteUser(id);
		// xu ly ngoai le khi khong tim thay id -> tra ve http 404
		if(user == null)
			throw new UserNotFoundException("id:" + id);
		
		return user;
	}
	
	@GetMapping("/users/{id}")
	public User retrieveUsers(@PathVariable int id){
		User user = service.findOne(id);
		// xu ly ngoai le khi khong tim thay id -> tra ve http 404
		if(user == null)
			throw new UserNotFoundException("id:" + id);
		
		return user;
	}
	
	
	//POST /user
	@PostMapping("/users")
	public ResponseEntity<User> createUser(@RequestBody User user) {
		User savedUser = service.save(user);
		// tao uri cho nguoi moi duoc tao them
		URI location = ServletUriComponentsBuilder.fromCurrentRequest()
				.path("/id")
				.buildAndExpand(savedUser.getId())
				.toUri();
		
		return ResponseEntity.created(location).build();
		
	}
}
